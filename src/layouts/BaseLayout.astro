---
import { fade, slide,  } from 'astro/virtual-modules/transitions.js';
import '../styles/global.css';
import { ViewTransitions } from 'astro:transitions';

const verticalSlide = {
	old: {
		name: 'vertical-slide-up-old',
		duration: '0.3s',
		easing: 'ease-out',
		fillMode: 'backwards',
	},
	new: {
		name: 'vertical-slide-up',
		duration: '0.3s',
		easing: 'ease-out',
		fillMode: 'backwards',
	},
};

const customTransition = {
	forwards: verticalSlide,
	backwards: verticalSlide,
};
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="❤️‍🔥" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover, user-scalable=no" />
		<meta name="generator" content={Astro.generator} />
		<link rel="preload" href="/fonts/yana/regular.woff2" as="font" type="font/woff2" crossorigin>
		<link rel="preload" href="/fonts/yana/italic.woff2" as="font" type="font/woff2" crossorigin>
		<link rel="preload" href="/fonts/yana/bold.woff2" as="font" type="font/woff2" crossorigin>
		<title>Yves Yil</title>
		<ViewTransitions />
	</head>
	<body>
		<div class="page-content" transition:animate={customTransition}>
			<slot />
		</div>
		<canvas id="fluid"></canvas>
		
		<!-- Page Navigation Dots -->
		<div id="page-dots" class="page-dots">
			<div class="dot" data-page="/" title="Home"></div>
			<div class="dot" data-page="/whoami/" title="Who Am I?"></div>
			<div class="dot" data-page="/projects/" title="Projects"></div>
			<div class="dot" data-page="/writings/" title="Writings"></div>
			<div class="dot" data-page="/contact/" title="Contact"></div>
		</div>
		
		<script src="../script/fluid.js"></script>
		<script>
			// Import navigate function for dot navigation
			import { navigate } from 'astro:transitions/client';
			
			// Page order for dot navigation
			const pageOrder = ['/', '/whoami/', '/projects/', '/writings/', '/contact/'];
			
			// Function to show/hide scroll indicator based on content navigation availability
			function updateScrollIndicator() {
				const scrollIndicator = document.getElementById('scroll-indicator');
				const contentElement = document.querySelector('.content-navigation-enabled');
				
				if (scrollIndicator) {
					if (contentElement) {
						scrollIndicator.style.display = 'flex';
					} else {
						scrollIndicator.style.display = 'none';
					}
				}
			}

			// Function to manage scroll position for mobile Safari
			function resetScrollPosition() {
				// Reset scroll to top to prevent text jumping
				window.scrollTo(0, 0);
				document.body.scrollTop = 0;
				document.documentElement.scrollTop = 0;
			}

			// Function to update page dots based on current page
			function updatePageDots() {
				const currentPath = window.location.pathname;
				const dots = document.querySelectorAll('.dot');
				
				dots.forEach(dot => {
					const dotPage = dot.getAttribute('data-page');
					if (dotPage === currentPath) {
						dot.classList.add('active');
					} else {
						dot.classList.remove('active');
					}
				});
			}

			// Function to setup dot navigation
			function setupDotNavigation() {
				const dots = document.querySelectorAll('.dot');
				
				dots.forEach(dot => {
					dot.addEventListener('click', async (e) => {
						e.preventDefault();
						const targetPage = dot.getAttribute('data-page');
						const currentPath = window.location.pathname;
						
						// Don't navigate if no target page or already on the page
						if (!targetPage || targetPage === currentPath) return;
						
						try {
							await navigate(targetPage);
						} catch (error) {
							console.error('Dot navigation error:', error);
						}
					});
				});
			}

			// Initialize on first load
			updateScrollIndicator();
			resetScrollPosition();
			updatePageDots();
			setupDotNavigation();

			// Handle before page swap
			document.addEventListener('astro:before-swap', () => {
				resetScrollPosition();
			});

			// Re-initialize after page transitions
			document.addEventListener('astro:page-load', () => {
				setTimeout(() => {
					updateScrollIndicator();
					resetScrollPosition();
					updatePageDots();
					setupDotNavigation();
					// Trigger a resize event to help fluid canvas re-initialize
					window.dispatchEvent(new Event('resize'));
				}, 100);
			});
		</script>
	</body>
</html>

<style>
	* {
		margin: 0;
		padding: 0;
	}

	html {
		/* Prevent overscroll/rubber band effect on mobile Safari */
		overscroll-behavior-y: none;
		/* Ensure consistent viewport height */
		height: 100%;
		/* Prevent horizontal scroll */
		overflow-x: hidden;
		/* Hide scrollbars globally */
		scrollbar-width: none; /* Firefox */
		-ms-overflow-style: none; /* IE and Edge */
	}

	html::-webkit-scrollbar {
		display: none; /* Chrome, Safari and Opera */
	}

	body {
		/* Prevent overscroll/rubber band effect */
		overscroll-behavior-y: none;
		/* Ensure consistent height on mobile Safari */
		min-height: 100vh;
		min-height: -webkit-fill-available;
		/* Prevent text selection and context menus on mobile */
		-webkit-user-select: none;
		user-select: none;
		-webkit-touch-callout: none;
		/* Prevent momentum scrolling */
		-webkit-overflow-scrolling: auto;
		/* Center content */
		display: flex;
		justify-content: center;
		/* Prevent horizontal scroll */
		overflow-x: hidden;
		/* Fix positioning relative to viewport */
		position: relative;
		/* Hide scrollbars */
		scrollbar-width: none; /* Firefox */
		-ms-overflow-style: none; /* IE and Edge */
		z-index: -100;
	}

	body::-webkit-scrollbar {
		display: none; /* Chrome, Safari and Opera */
	}

	/* Page content container - inherits body styles but gets transitions */
	.page-content {
		width: 100%;
		height: 100vh;
		height: -webkit-fill-available;
		display: flex;
		justify-content: center;
		position: relative;
		background-color: transparent;
	}

	/* Global scrollbar hiding for all elements */
	*::-webkit-scrollbar {
		display: none;
	}

	* {
		scrollbar-width: none; /* Firefox */
		-ms-overflow-style: none; /* IE and Edge */
	}

	#fluid {
		z-index: -1;
		margin: 0;
		position: fixed;
		top: 0;
		left: 0;
		height: 100%;
		width: 100%;
	}

	/* Page Dots Navigation */
	.page-dots {
		position: fixed;
		right: 2rem;
		bottom: 20%;
		display: flex;
		flex-direction: column;
		gap: 1.3rem;
		z-index: 100;
	}

	.dot {
		width: 15px;
		height: 15px;
		border-radius: 50%;
		background-color: var(--site-alt);
		border: 2px solid transparent;
		cursor: pointer;
		transition: all 0.3s ease;
		opacity: 0.6;
	}

	.dot:hover {
		opacity: 1;
		transform: scale(1.2);
		background-color: var(--site-default);
		transition: all 0.5s ease;
	}

	.dot.active {
		background-color: var(--site-light);
		border-color: var(--site-default);
		opacity: 1;
		transform: scale(1.3);
	}

	@media (pointer: none), (pointer: coarse), (hover: none) {
		body {
			height: 100vh;
			height: -webkit-fill-available;
		}
		
		.scroll-text {
			font-size: 12px;
		}
		
		.scroll-arrow {
			font-size: 16px;
		}
	}

	@media screen and (max-width: 900px) {
		/* Mobile dot positioning */
		.page-dots {
			top: 2rem;
			right: 2rem;
			gap: 2.5rem;
		}

		.dot {
			width: 10px;
			height: 10px;
		}
	}
</style>
