---
const { title, next, prev } = Astro.props;
---
<main>
	<div data-next={next} data-prev={prev}>
		{title ? <h2 class="section-title">{title}</h2> : null }
		<div class="section-body"><slot /></div>
	</div>
</main>

<style>
	main {
		width: 100%;
		height: 100vh;
		position: fixed;
		display: flex;
		justify-content: center;
		align-items: center;
		overflow: hidden;
	}

	main > div {
		display: flex;
		align-items: center;
		flex-direction: column;
		width: 70vw;
		height: 70vh;
		position: relative;
		overflow: hidden;
	}

	.section-title {
		top: 0;
		position: relative;
		flex-shrink: 0;
	}

	.section-body {
		display: flex; 
		flex-direction: column; 
		justify-content: flex-start;
		align-items: stretch;
		position: relative;
		height: 60vh;
		min-height: 400px;
		max-width: 100%;
		padding: 1rem;
		box-sizing: border-box;
		overflow-y: auto;
		top: 2vh;
		gap: 1rem;
	}

	.section-body > * {
		flex-shrink: 0;
	}

	.section-body > h1 {
		margin-bottom: 1rem;
	}

	.section-body > p, 
	.section-body > ul {
		margin-bottom: 1rem;
	}

	.section-body > br {
		display: none;
	}

	@media screen and (max-width: 900px) {
    main > div {
      width: 80vw;
      height: 90vh;
    }
    
    .section-body {
      height: 75vh;
      min-height: 500px;
	  padding: 25px;
    }
  }
</style>

<script>
	import { navigate } from 'astro:transitions/client';
	import { mobileAndTabletCheck } from '../script/utils';

	let bodyHeight = document.body.clientHeight;
	let middlePos = (bodyHeight - innerHeight) / 2;

	const scrollEvent = (e: Event) => {
		let href: string | null = null;
		if (middlePos > scrollY) {
			href = document.querySelector('main > div')?.getAttribute('data-prev')!;
		} else if (middlePos == scrollY) {
			return;
		} else {
			href = document.querySelector('main > div')?.getAttribute('data-next')!;
		}
		if (href === null) {
			return;
		}
		removeEventListener('scroll', scrollEvent);
		addEventListener('scroll', (e: Event) => e.preventDefault());
		setTimeout(() => navigate('/' + href), 100);
	};
	
	let touchstartY = 0;
	let touchendY = 0;

	const swipeEvent = () => {
		let href: string | null = null;
		// swiped up
		if (touchendY + 100 < touchstartY) {
			href = document.querySelector('main > div')?.getAttribute('data-next')!;
		}
		// swiped down
		if (touchendY - 100 > touchstartY) {
			href = document.querySelector('main > div')?.getAttribute('data-prev')!;
		}
		if (href === null) {
			return;
		}
		navigate('/' + href);
	};

	if (mobileAndTabletCheck()) {
		addEventListener('touchstart', (e: TouchEvent) => {
			touchstartY = e.changedTouches[0].screenY;
		});
		addEventListener('touchend', (e: TouchEvent) => {
			touchendY = e.changedTouches[0].screenY;
			swipeEvent();
		});
	} 
	document.addEventListener('astro:page-load', () => {
		if (!mobileAndTabletCheck()) {
			scroll(0, middlePos);
			setTimeout(() => addEventListener('scroll', scrollEvent), 100);
		}
	});
</script>